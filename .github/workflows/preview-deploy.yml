name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  contents: read
  pull-requests: write
  issues: write
jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (Frontend tests)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend tests
        run: |
          cd frontend
          npm test

      - name: Set up Node.js (Backend tests)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Create Backend .env file
        run: |
          cd backend
          echo "PORT=${{ secrets.PORT }}" > .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "TEST_MONGO_URI=${{ secrets.TEST_MONGO_URI }}" >> .env
          echo "SECRET=${{ secrets.SECRET }}" >> .env

      # - name: Run backend tests
      #   run: |
      #     cd backend
      #     npm test

  deploy-backend:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URL }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker image
        run: |
          cd backend
          docker build -t backend-preview:${{ github.event.number }} .

      - name: Push Docker image to ECR
        run: |
          docker tag backend-preview:${{ github.event.number }} ${{ secrets.ECR_REPO_URL }}:pr-${{ github.event.number }}
          docker push ${{ secrets.ECR_REPO_URL }}:pr-${{ github.event.number }}

      - name: Deploy Backend to ECS (or another service)
        run: |
          # Replace with ECS or container service deployment commands
          echo "Deploying backend to ECS..."
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PORT: 5000
          MONGO_URI: ${{ secrets.MONGO_URI }}
          SECRET: ${{ secrets.SECRET }}

      - name: Get Backend URL
        run: |
          # Assuming ECS or a Load Balancer, fetch URL dynamically
          # Replace this with your actual URL retrieval logic
          BACKEND_URL="http://backend-preview-${{ github.event.number }}.my-ecs-url.com"
          echo "BACKEND_URL=${BACKEND_URL}" >> $GITHUB_ENV

  deploy-frontend:
    needs: [run-tests, deploy-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Inject Backend URL into .env
        run: |
          cd frontend
          echo "VITE_BASE_URL=${{ env.BACKEND_URL }}" > .env

      - name: Deploy Preview to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          cd frontend
          vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
          vercel build --token=$VERCEL_TOKEN
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=$VERCEL_TOKEN)
          echo "PREVIEW_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV

      - name: Post preview link in PR comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview available at: http://my-frontend-preview-bucket.s3-website-us-west-2.amazonaws.com/pr-${{ github.event.number }}/`
            })
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
