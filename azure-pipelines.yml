# Node.js with React - Azure Pipeline
# Pipeline for a Node.js project using a MERN stack with React
# Includes steps for building, running tests, and analyzing code with SonarQube

trigger:
  - develop

pool: TestAgent

steps:
  # Step 1: Install Node.js
  - task: NodeTool@0
    inputs:
      versionSpec: "20.x"
    displayName: "Install Node.js"

  # Step 2: Download .env file from secure files
  - task: DownloadSecureFile@1
    inputs:
      secureFile: ".env"

  # Step 3: Copy .env file to the backend directory
  - task: CopyFiles@2
    inputs:
      SourceFolder: $(Agent.TempDirectory)
      Contents: ".env"
      TargetFolder: $(Build.SourcesDirectory)\backend

  # Step 4: Run backend tests with Mocha and Chai
  - script: |
      cd backend
      npm install && npm test -- --reporter spec
      dir
    displayName: "Run backend tests with Mocha and Chai"
    continueOnError: false

  # Step 5: Publish backend test results
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "**/backend/test-*.xml"
      failTaskOnFailedTests: true
      failTaskOnFailureToPublishResults: true
      failTaskOnMissingResultsFile: true
      testRunTitle: "Publish Backend Test Results"

  # Step 6: Run frontend tests with Jest
  - script: |
      cd frontend
      npm install && npm test
    displayName: "Run frontend tests with Jest"
    continueOnError: false

  # Step 7: Publish frontend test results
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "**/frontend/junit.xml"
      failTaskOnFailedTests: true
      failTaskOnFailureToPublishResults: true
      failTaskOnMissingResultsFile: true
      testRunTitle: "Publish Frontend Test Results"
